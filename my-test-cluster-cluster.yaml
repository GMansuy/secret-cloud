apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
    control-plane: controller-manager
  name: default
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: scalewayclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: ScalewayCluster
    listKind: ScalewayClusterList
    plural: scalewayclusters
    singular: scalewaycluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Endpoint of the control plane
      jsonPath: .spec.controlPlaneEndpoint
      name: Endpoint
      type: string
    - description: Region of the cluster
      jsonPath: .spec.region
      name: Region
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ScalewayCluster is the Schema for the scalewayclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScalewayClusterSpec defines the desired state of ScalewayCluster
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              controlPlaneLoadBalancer:
                description: ControlPlaneLoadBalancer contains loadbalancer options.
                properties:
                  allowedRanges:
                    description: AllowedRanges allows to set a list of allowed IP
                      ranges that can access the cluster through the load balancer.
                      When unset, all IP ranges are allowed. To allow the cluster
                      to work properly, public IPs of nodes and Public Gateways will
                      automatically be allowed. However, if this field is set, you
                      MUST manually allow IPs of the nodes of your management cluster.
                    items:
                      type: string
                    type: array
                  ip:
                    description: IP to use when creating a loadbalancer.
                    format: ipv4
                    type: string
                  type:
                    default: LB-S
                    description: Load Balancer commercial offer type.
                    type: string
                  zone:
                    description: Zone where to create the loadbalancer. Must be in
                      the same region as the cluster. Defaults to the first zone of
                      the region.
                    type: string
                type: object
              failureDomains:
                description: FailureDomains is a list of failure domains where the
                  control-plane nodes and resources (loadbalancer, public gateway,
                  etc.) will be created.
                items:
                  type: string
                type: array
              network:
                description: Network contains network related options for the cluster.
                properties:
                  privateNetwork:
                    description: PrivateNetwork allows attaching machines of the cluster
                      to a Private Network.
                    properties:
                      enabled:
                        description: Set to true to automatically attach machines
                          to a Private Network. The Private Network is automatically
                          created if no existing Private Network ID is provided.
                        type: boolean
                      id:
                        description: Set a Private Network ID to reuse an existing
                          Private Network. This Private Network must have DHCP enabled.
                        type: string
                      subnet:
                        description: Optional subnet for the Private Network. Only
                          used on newly created Private Networks.
                        type: string
                    required:
                    - enabled
                    type: object
                  publicGateway:
                    description: Use this field to create or use an existing Public
                      Gateway and attach it to the Private Network. Do not set this
                      field if the Private Network already has an attached Public
                      Gateway.
                    properties:
                      enabled:
                        description: Set to true to attach a Public Gateway to the
                          Private Network. The Public Gateway will automatically be
                          created if no existing Public Gateway ID is provided.
                        type: boolean
                      id:
                        description: ID of an existing Public Gateway that will be
                          attached to the Private Network. You should also specify
                          the zone field.
                        type: string
                      ip:
                        description: IP to use when creating a Public Gateway.
                        format: ipv4
                        type: string
                      type:
                        default: VPC-GW-S
                        description: Public Gateway commercial offer type.
                        type: string
                      zone:
                        description: Zone where to create the Public Gateway. Must
                          be in the same region as the cluster. Defaults to the first
                          zone of the region.
                        type: string
                    required:
                    - enabled
                    type: object
                  securityGroups:
                    description: 'A list of security groups that will be created in
                      all zones of the region of the cluster. A security group can
                      be referenced by its name in the ScalewayMachine object. If
                      a security group is in use by at least one machine, it MUST
                      NOT be removed from this list: remove the machines first.'
                    items:
                      description: SecurityGroup contains a name and inbound/outbound
                        policies.
                      properties:
                        inbound:
                          description: Inbound policy. If not set, all inbound traffic
                            is allowed.
                          properties:
                            default:
                              description: Default policy. If unset, defaults to "Accept".
                              type: string
                            rules:
                              description: A list of rules for this policy.
                              items:
                                description: SecurityGroupRule is a rule for the security
                                  group policy.
                                properties:
                                  action:
                                    description: Action to apply when the rule matches
                                      a packet.
                                    type: string
                                  ipRange:
                                    description: IP range this rule applies to. Defaults
                                      to 0.0.0.0/0.
                                    type: string
                                  ports:
                                    description: Port or range of ports this rule
                                      applies to. Not applicable for ICMP or ANY.
                                    type: string
                                  protocol:
                                    description: Protocol family this rule applies
                                      to. Can be ANY, TCP, UDP or ICMP. If unset,
                                      defaults to ANY.
                                    type: string
                                required:
                                - action
                                type: object
                              type: array
                          type: object
                        name:
                          description: Name of the security group. Must be unique
                            in a list of security groups.
                          type: string
                        outbound:
                          description: Oubound policy. If not set, all outbound traffic
                            is allowed.
                          properties:
                            default:
                              description: Default policy. If unset, defaults to "Accept".
                              type: string
                            rules:
                              description: A list of rules for this policy.
                              items:
                                description: SecurityGroupRule is a rule for the security
                                  group policy.
                                properties:
                                  action:
                                    description: Action to apply when the rule matches
                                      a packet.
                                    type: string
                                  ipRange:
                                    description: IP range this rule applies to. Defaults
                                      to 0.0.0.0/0.
                                    type: string
                                  ports:
                                    description: Port or range of ports this rule
                                      applies to. Not applicable for ICMP or ANY.
                                    type: string
                                  protocol:
                                    description: Protocol family this rule applies
                                      to. Can be ANY, TCP, UDP or ICMP. If unset,
                                      defaults to ANY.
                                    type: string
                                required:
                                - action
                                type: object
                              type: array
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                type: object
              region:
                description: Region represents the region where the cluster will be
                  hosted.
                type: string
              scalewaySecretName:
                description: 'Name of the secret that contains the Scaleway client
                  parameters. The following keys must be set: accessKey, secretKey,
                  projectID. The following key is optional: apiURL.'
                type: string
            required:
            - region
            - scalewaySecretName
            type: object
          status:
            description: ScalewayClusterStatus defines the observed state of ScalewayCluster
            properties:
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure
                    domains. It allows controllers to understand how many failure
                    domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: List of failure domains for this cluster.
                type: object
              network:
                description: Network status.
                properties:
                  privateNetworkID:
                    description: ID of the Private Network if available.
                    type: string
                  publicGatewayID:
                    description: ID of the Public Gateway if available.
                    type: string
                type: object
              ready:
                default: false
                description: Ready is true when all cloud resources are created and
                  ready.
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: scalewayclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: ScalewayClusterTemplate
    listKind: ScalewayClusterTemplateList
    plural: scalewayclustertemplates
    shortNames:
    - sct
    singular: scalewayclustertemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ScalewayClusterTemplate is the Schema for the scalewayclustertemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScalewayClusterTemplateSpec defines the desired state of
              ScalewayClusterTemplate
            properties:
              template:
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    type: object
                  spec:
                    description: ScalewayClusterSpec defines the desired state of
                      ScalewayCluster
                    properties:
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      controlPlaneLoadBalancer:
                        description: ControlPlaneLoadBalancer contains loadbalancer
                          options.
                        properties:
                          allowedRanges:
                            description: AllowedRanges allows to set a list of allowed
                              IP ranges that can access the cluster through the load
                              balancer. When unset, all IP ranges are allowed. To
                              allow the cluster to work properly, public IPs of nodes
                              and Public Gateways will automatically be allowed. However,
                              if this field is set, you MUST manually allow IPs of
                              the nodes of your management cluster.
                            items:
                              type: string
                            type: array
                          ip:
                            description: IP to use when creating a loadbalancer.
                            format: ipv4
                            type: string
                          type:
                            default: LB-S
                            description: Load Balancer commercial offer type.
                            type: string
                          zone:
                            description: Zone where to create the loadbalancer. Must
                              be in the same region as the cluster. Defaults to the
                              first zone of the region.
                            type: string
                        type: object
                      failureDomains:
                        description: FailureDomains is a list of failure domains where
                          the control-plane nodes and resources (loadbalancer, public
                          gateway, etc.) will be created.
                        items:
                          type: string
                        type: array
                      network:
                        description: Network contains network related options for
                          the cluster.
                        properties:
                          privateNetwork:
                            description: PrivateNetwork allows attaching machines
                              of the cluster to a Private Network.
                            properties:
                              enabled:
                                description: Set to true to automatically attach machines
                                  to a Private Network. The Private Network is automatically
                                  created if no existing Private Network ID is provided.
                                type: boolean
                              id:
                                description: Set a Private Network ID to reuse an
                                  existing Private Network. This Private Network must
                                  have DHCP enabled.
                                type: string
                              subnet:
                                description: Optional subnet for the Private Network.
                                  Only used on newly created Private Networks.
                                type: string
                            required:
                            - enabled
                            type: object
                          publicGateway:
                            description: Use this field to create or use an existing
                              Public Gateway and attach it to the Private Network.
                              Do not set this field if the Private Network already
                              has an attached Public Gateway.
                            properties:
                              enabled:
                                description: Set to true to attach a Public Gateway
                                  to the Private Network. The Public Gateway will
                                  automatically be created if no existing Public Gateway
                                  ID is provided.
                                type: boolean
                              id:
                                description: ID of an existing Public Gateway that
                                  will be attached to the Private Network. You should
                                  also specify the zone field.
                                type: string
                              ip:
                                description: IP to use when creating a Public Gateway.
                                format: ipv4
                                type: string
                              type:
                                default: VPC-GW-S
                                description: Public Gateway commercial offer type.
                                type: string
                              zone:
                                description: Zone where to create the Public Gateway.
                                  Must be in the same region as the cluster. Defaults
                                  to the first zone of the region.
                                type: string
                            required:
                            - enabled
                            type: object
                          securityGroups:
                            description: 'A list of security groups that will be created
                              in all zones of the region of the cluster. A security
                              group can be referenced by its name in the ScalewayMachine
                              object. If a security group is in use by at least one
                              machine, it MUST NOT be removed from this list: remove
                              the machines first.'
                            items:
                              description: SecurityGroup contains a name and inbound/outbound
                                policies.
                              properties:
                                inbound:
                                  description: Inbound policy. If not set, all inbound
                                    traffic is allowed.
                                  properties:
                                    default:
                                      description: Default policy. If unset, defaults
                                        to "Accept".
                                      type: string
                                    rules:
                                      description: A list of rules for this policy.
                                      items:
                                        description: SecurityGroupRule is a rule for
                                          the security group policy.
                                        properties:
                                          action:
                                            description: Action to apply when the
                                              rule matches a packet.
                                            type: string
                                          ipRange:
                                            description: IP range this rule applies
                                              to. Defaults to 0.0.0.0/0.
                                            type: string
                                          ports:
                                            description: Port or range of ports this
                                              rule applies to. Not applicable for
                                              ICMP or ANY.
                                            type: string
                                          protocol:
                                            description: Protocol family this rule
                                              applies to. Can be ANY, TCP, UDP or
                                              ICMP. If unset, defaults to ANY.
                                            type: string
                                        required:
                                        - action
                                        type: object
                                      type: array
                                  type: object
                                name:
                                  description: Name of the security group. Must be
                                    unique in a list of security groups.
                                  type: string
                                outbound:
                                  description: Oubound policy. If not set, all outbound
                                    traffic is allowed.
                                  properties:
                                    default:
                                      description: Default policy. If unset, defaults
                                        to "Accept".
                                      type: string
                                    rules:
                                      description: A list of rules for this policy.
                                      items:
                                        description: SecurityGroupRule is a rule for
                                          the security group policy.
                                        properties:
                                          action:
                                            description: Action to apply when the
                                              rule matches a packet.
                                            type: string
                                          ipRange:
                                            description: IP range this rule applies
                                              to. Defaults to 0.0.0.0/0.
                                            type: string
                                          ports:
                                            description: Port or range of ports this
                                              rule applies to. Not applicable for
                                              ICMP or ANY.
                                            type: string
                                          protocol:
                                            description: Protocol family this rule
                                              applies to. Can be ANY, TCP, UDP or
                                              ICMP. If unset, defaults to ANY.
                                            type: string
                                        required:
                                        - action
                                        type: object
                                      type: array
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                        type: object
                      region:
                        description: Region represents the region where the cluster
                          will be hosted.
                        type: string
                      scalewaySecretName:
                        description: 'Name of the secret that contains the Scaleway
                          client parameters. The following keys must be set: accessKey,
                          secretKey, projectID. The following key is optional: apiURL.'
                        type: string
                    required:
                    - region
                    - scalewaySecretName
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: scalewaymachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: ScalewayMachine
    listKind: ScalewayMachineList
    plural: scalewaymachines
    singular: scalewaymachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Provider ID
      jsonPath: .spec.providerID
      name: ProviderID
      type: string
    - description: Type of instance
      jsonPath: .spec.type
      name: Type
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ScalewayMachine is the Schema for the scalewaymachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScalewayMachineSpec defines the desired state of ScalewayMachine
            properties:
              image:
                description: Label (e.g. ubuntu_jammy) or UUID of an image that will
                  be used to create the instance.
                type: string
              providerID:
                type: string
              publicIP:
                description: Set to true to create and attach a public IP to the instance.
                  Defaults to false.
                type: boolean
              rootVolumeSize:
                description: Size of the root volume in GB. Defaults to 20 GB.
                format: int64
                type: integer
              rootVolumeType:
                description: Type of the root volume. Can be local or block. Note
                  that not all types of instances support local volumes.
                enum:
                - local
                - block
                type: string
              securityGroupName:
                description: Name of the security group as specified in the ScalewayCluster
                  object. If not set, the instance will be attached to the default
                  security group.
                type: string
              type:
                description: Type of instance (e.g. PRO2-S).
                type: string
            required:
            - image
            - type
            type: object
          status:
            description: ScalewayMachineStatus defines the observed state of ScalewayMachine
            properties:
              addresses:
                description: Addresses of the node.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP,
                        InternalIP, ExternalDNS or InternalDNS.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: scalewaymachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: ScalewayMachineTemplate
    listKind: ScalewayMachineTemplateList
    plural: scalewaymachinetemplates
    shortNames:
    - smt
    singular: scalewaymachinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ScalewayMachineTemplate is the Schema for the scalewaymachinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScalewayMachineTemplateSpec defines the desired state of
              ScalewayMachineTemplate
            properties:
              template:
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    type: object
                  spec:
                    description: ScalewayMachineSpec defines the desired state of
                      ScalewayMachine
                    properties:
                      image:
                        description: Label (e.g. ubuntu_jammy) or UUID of an image
                          that will be used to create the instance.
                        type: string
                      providerID:
                        type: string
                      publicIP:
                        description: Set to true to create and attach a public IP
                          to the instance. Defaults to false.
                        type: boolean
                      rootVolumeSize:
                        description: Size of the root volume in GB. Defaults to 20
                          GB.
                        format: int64
                        type: integer
                      rootVolumeType:
                        description: Type of the root volume. Can be local or block.
                          Note that not all types of instances support local volumes.
                        enum:
                        - local
                        - block
                        type: string
                      securityGroupName:
                        description: Name of the security group as specified in the
                          ScalewayCluster object. If not set, the instance will be
                          attached to the default security group.
                        type: string
                      type:
                        description: Type of instance (e.g. PRO2-S).
                        type: string
                    required:
                    - image
                    - type
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
  name: caps-controller-manager
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
  name: caps-leader-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: caps-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - scalewayclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - scalewayclusters/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - scalewayclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - scalewaymachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - scalewaymachines/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - scalewaymachines/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
  name: caps-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
  name: caps-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
  name: caps-leader-election-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: caps-leader-election-role
subjects:
- kind: ServiceAccount
  name: caps-controller-manager
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
  name: caps-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: caps-manager-role
subjects:
- kind: ServiceAccount
  name: caps-controller-manager
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
  name: caps-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: caps-proxy-role
subjects:
- kind: ServiceAccount
  name: caps-controller-manager
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
    control-plane: controller-manager
  name: caps-controller-manager-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
  name: caps-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
    control-plane: controller-manager
  name: caps-controller-manager
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/tomy2e/cluster-api-provider-scaleway:v0.0.3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.14.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: caps-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
  name: caps-serving-cert
  namespace: default
spec:
  dnsNames:
  - caps-webhook-service.default.svc
  - caps-webhook-service.default.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: caps-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
  name: caps-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/caps-serving-cert
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: cluster-api-provider-scaleway
    app.kubernetes.io/instance: validating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: validatingwebhookconfiguration
    app.kubernetes.io/part-of: cluster-api-provider-scaleway
  name: caps-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: caps-webhook-service
      namespace: default
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-scalewaycluster
  failurePolicy: Fail
  name: vscalewaycluster.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - scalewayclusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: caps-webhook-service
      namespace: default
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-scalewaymachine
  failurePolicy: Fail
  name: vscalewaymachine.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - scalewaymachines
  sideEffects: None